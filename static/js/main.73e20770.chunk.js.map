{"version":3,"sources":["containers/WeatherScreen/wind.svg","containers/WeatherScreen/humidity.svg","containers/WeatherScreen/thermometer.svg","history.js","store/api.js","store/forecast.js","containers/SplashScreen/index.js","components/Barchart.jsx","containers/WeatherScreen/Switch.jsx","components/Carousel.jsx","containers/WeatherScreen/ForecastsListItem.jsx","utils/constants.js","containers/WeatherScreen/Forecasts.jsx","containers/WeatherScreen/index.js","containers/NotFoundPage/index.js","containers/App/index.js","store/reducer.js","store/middleware/api.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","createBrowserHistory","apiCallBegan","createAction","slice","createSlice","name","initialState","list","city","barchart","selected","units","loading","lastFetch","error","reducers","weatherRequested","forecast","weatherReceived","action","payload","Date","now","weatherRequestFailed","updateUnits","buildBarchart","data","selectForecast","resetForecast","setError","actions","groupedForecastList","createSelector","state","reduce","accumulator","currentValue","date","moment","dt_txt","format","populateBarchartData","dispatch","getState","m","map","daily","tempC","tempF","temp","useStyles","makeStyles","theme","createStyles","root","display","height","alignItems","justifyContent","SplashScreen","classes","useDispatch","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","diff","coords","latitude","longitude","url","process","onStart","type","onSuccess","onError","fetchWeather","catch","err","history","push","className","CircularProgress","color","chart","width","maxWidth","layout","margin","spacing","Barchart","fontSize","interval","dataKey","barSize","fill","yAxisId","entry","index","key","CustomRadio","withStyles","palette","primary","dark","checked","props","Radio","Switch","useState","value","setValue","FormControl","component","RadioGroup","row","aria-label","onChange","event","target","FormControlLabel","control","label","hideNav","visibility","nav","top","transform","zIndex","padding","next","left","prev","right","CustomNextArrow","onClick","nextClassName","includes","IconButton","CustomPrevArrow","prevClassName","Carousel","sliderChange","this","settings","dots","infinite","speed","slidesToShow","slidesToScroll","beforeChange","nextArrow","prevArrow","responsive","breakpoint","initialSlide","arrows","children","Component","item","boxSizing","weatherIcon","icon","marginRight","cardFooterText","typography","card","background","active","contrastText","backgroundColor","content","paddingBottom","marginTop","marginBottom","info","textTransform","ForecastsListItem","metric","tempCMax","tempCMin","tempFMax","tempFMin","humidity","description","wind","Card","CardContent","Grid","container","xs","sm","Typography","variant","Avatar","alt","src","Box","flexDirection","ThermometerIcon","WindIcon","HumidityIcon","Forecasts","setSelected","forecasts","useSelector","keys","Object","showBarchart","breakpoints","up","paddingLeft","paddingRight","header","alignRight","textAlign","WeatherScreen","length","country","NotFound","p","mx","Button","App","exact","path","NotFoundPage","combineReducers","forecastReducer","roundFloat","number","Number","toFixed","api","a","method","axios","request","baseURL","response","x","main","temp_max","temp_min","dt","weather","structuredData","setTimeout","message","Boolean","window","location","hostname","match","store","configureStore","reducer","middleware","getDefaultMiddleware","createMuiTheme","light","lightBlue","arrow","ReactDOM","render","ThemeProvider","document","getElementById","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.73e20770.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wind.02315525.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.48f2ef02.svg\";","module.exports = __webpack_public_path__ + \"static/media/thermometer.e9ba701f.svg\";","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\");\nexport const apiCallSuccess = createAction(\"api/callSuccess\");\nexport const apiCallFailed = createAction(\"api/callFailed\");\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { createSelector } from \"reselect\";\nimport { apiCallBegan } from \"./api\";\nimport moment from \"moment\";\n\nconst slice = createSlice({\n  name: \"forecast\",\n  initialState: {\n    list: [],\n    city: {},\n    barchart: [],\n    selected: [],\n    units: \"imperial\",\n    loading: false,\n    lastFetch: null,\n    error: null,\n  },\n  reducers: {\n    weatherRequested: (forecast) => {\n      forecast.loading = true;\n    },\n\n    weatherReceived: (forecast, action) => {\n      forecast.list = action.payload.list;\n      forecast.city = action.payload.city;\n      forecast.lastFetch = Date.now();\n      forecast.barchart = [];\n      forecast.loading = false;\n    },\n\n    weatherRequestFailed: (forecast) => {\n      forecast.loading = false;\n    },\n\n    updateUnits: (forecast, action) => {\n      forecast.units = action.payload;\n    },\n\n    buildBarchart: (forecast, action) => {\n      forecast.barchart = action.payload.data;\n    },\n\n    selectForecast: (forecast, action) => {\n      forecast.selected = action.payload;\n    },\n\n    resetForecast: (forecast, action) => {\n      forecast.barchart = [];\n      forecast.selected = [];\n    },\n\n    setError: (forecast, action) => {\n      forecast.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  weatherReceived,\n  weatherRequested,\n  weatherRequestFailed,\n  updateUnits,\n  buildBarchart,\n  selectForecast,\n  resetForecast,\n  setError,\n} = slice.actions;\n\nexport default slice.reducer;\n\n// Action Creators\nexport const fetchWeather = (position) => (dispatch, getState) => {\n  const { lastFetch } = getState().forecast;\n  const diffInMinutes = moment().diff(moment(lastFetch), \"minutes\");\n  if (diffInMinutes < 10) return;\n\n  const { latitude, longitude } = position.coords;\n  const url = `/data/2.5/forecast?lat=${latitude}&lon=${longitude}&APPID=${process.env.REACT_APP_WEATHER_API_KEY}&cnt=40&units=metric`;\n\n  return dispatch(\n    apiCallBegan({\n      url,\n      onStart: weatherRequested.type,\n      onSuccess: weatherReceived.type,\n      onError: weatherRequestFailed.type,\n    })\n  );\n};\n\nexport const groupedForecastList = createSelector(\n  (state) => state.forecast,\n  (forecast) =>\n    forecast.list.reduce((accumulator, currentValue) => {\n      const date = moment(currentValue.dt_txt).format(\"DD\");\n\n      accumulator[date] = [...(accumulator[date] || []), currentValue];\n      return accumulator;\n    }, {})\n);\n\nexport const populateBarchartData = () => (dispatch, getState) => {\n  const { units, selected } = getState().forecast;\n  const m = units === \"metric\" ? \"C\" : \"F\";\n\n  if (!selected) {\n    return;\n  }\n\n  const data = [\n    ...selected.map((daily) => {\n      return {\n        name: m === \"C\" ? `${daily.tempC} ${m}` : `${daily.tempF} ${m}`,\n        temp: m === \"C\" ? daily.tempC : daily.tempF,\n      };\n    }),\n  ];\n\n  return dispatch(\n    buildBarchart({\n      data,\n    })\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { fetchWeather, setError } from \"../../store/forecast\";\nimport history from \"../../history\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      height: \"100vh\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n    },\n  })\n);\n\nconst SplashScreen = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const getPosition = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n\n  useEffect(() => {\n    getPosition()\n      .then((position) => {\n        dispatch(fetchWeather(position));\n      })\n      .catch((err) => {\n        dispatch(setError(\"Please enable location and try again.\"));\n        history.push(\"/locationNotFound\");\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n};\n\nexport default SplashScreen;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { XAxis, ResponsiveContainer, Bar, BarChart, Cell } from \"recharts\";\n\nconst useStyles = makeStyles((theme) => ({\n  chart: {\n    width: \"100%\",\n    maxWidth: theme.layout.maxWidth,\n    height: 400,\n    margin: theme.spacing(3, \"auto\", 2),\n  },\n}));\n\nconst Barchart = ({ data }) => {\n  const classes = useStyles();\n\n  if (!data) {\n    return null;\n  }\n\n  return (\n    <div className={classes.chart}>\n      <ResponsiveContainer>\n        <BarChart width={400} height={400} data={data}>\n          <XAxis fontSize={10} interval={0} dataKey=\"name\" />\n          <Bar barSize={80} fill=\"#0277bd\" yAxisId=\"a\" dataKey=\"temp\">\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Barchart;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { updateUnits, populateBarchartData } from \"../../store/forecast\";\n\nconst CustomRadio = withStyles((theme) => ({\n  root: {\n    color: theme.palette.primary.dark,\n    \"&$checked\": {\n      color: theme.palette.primary.dark,\n    },\n  },\n  checked: {},\n}))((props) => <Radio {...props} />);\n\nconst Switch = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"imperial\");\n\n  const handleRadioChange = (event) => {\n    setValue(event.target.value);\n    dispatch(updateUnits(event.target.value));\n    dispatch(populateBarchartData());\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        row\n        aria-label=\"forcast\"\n        name=\"forcast\"\n        value={value}\n        onChange={handleRadioChange}\n      >\n        <FormControlLabel\n          value=\"metric\"\n          control={<CustomRadio />}\n          color=\"textSecondary\"\n          label=\"Celcius\"\n        />\n        <FormControlLabel\n          value=\"imperial\"\n          control={<CustomRadio />}\n          color=\"textSecondary\"\n          label=\"Fahrenheit\"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default Switch;\n","import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateNext from \"@material-ui/icons/NavigateNext\";\nimport NavigateBefore from \"@material-ui/icons/NavigateBefore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  hideNav: {\n    visibility: \"hidden\",\n  },\n  nav: {\n    position: \"absolute\",\n    top: \"50%\",\n    transform: \"translateY(-50%)\",\n    zIndex: 9,\n    padding: 0,\n  },\n  next: {\n    left: \"100%\",\n  },\n  prev: {\n    right: \"100%\",\n  },\n});\n\nfunction CustomNextArrow(props) {\n  const { className, onClick } = props;\n  const classes = useStyles();\n\n  const nextClassName = className.includes(\"slick-disabled\")\n    ? `${classes.hideNav} ${classes.nav} ${classes.next}`\n    : `${classes.next} ${classes.nav}`;\n\n  return (\n    <IconButton className={nextClassName} aria-label=\"next\" onClick={onClick}>\n      <NavigateNext fontSize=\"large\" />\n    </IconButton>\n  );\n}\n\nfunction CustomPrevArrow(props) {\n  const { className, onClick } = props;\n  const classes = useStyles();\n\n  const prevClassName = className.includes(\"slick-disabled\")\n    ? `${classes.hideNav} ${classes.nav} ${classes.prev}`\n    : `${classes.prev} ${classes.nav}`;\n\n  return (\n    <IconButton className={prevClassName} aria-label=\"prev\" onClick={onClick}>\n      <NavigateBefore fontSize=\"large\" />\n    </IconButton>\n  );\n}\n\nclass Carousel extends Component {\n  render() {\n    const { sliderChange } = this.props;\n\n    var settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      beforeChange: (index) => sliderChange(index),\n      nextArrow: <CustomNextArrow />,\n      prevArrow: <CustomPrevArrow />,\n      responsive: [\n        {\n          breakpoint: 900,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            initialSlide: 0,\n            dots: true,\n            arrows: false,\n          },\n        },\n        {\n          breakpoint: 767,\n          settings: {\n            slidesToShow: 1,\n            dots: true,\n            arrows: false,\n          },\n        },\n      ],\n    };\n\n    return <Slider {...settings}>{this.props.children}</Slider>;\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport {\n  Card,\n  CardContent,\n  Typography,\n  Avatar,\n  Grid,\n  Box,\n} from \"@material-ui/core\";\nimport { OPEN_WEATHER_MAP_URL } from \"../../utils/constants\";\nimport WindIcon from \"./wind.svg\";\nimport HumidityIcon from \"./humidity.svg\";\nimport ThermometerIcon from \"./thermometer.svg\";\n\nconst useStyles = makeStyles((theme) => ({\n  item: {\n    padding: theme.spacing(1),\n    boxSizing: \"border-box\",\n  },\n  weatherIcon: {\n    width: 64,\n    height: 64,\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: theme.spacing(1),\n  },\n  cardFooterText: {\n    fontSize: theme.typography.fontSize,\n  },\n  card: {\n    background: \"linear-gradient(45deg, #0277bd 30%, #4fc3f7 90%)\",\n    color: \"white\",\n  },\n  active: {\n    color: theme.palette.primary.contrastText,\n    backgroundColor: theme.palette.primary.dark,\n  },\n  content: {\n    \"&:last-child\": {\n      paddingBottom: theme.spacing(2),\n    },\n  },\n  temp: {\n    marginTop: theme.spacing(1),\n    marginBottom: theme.spacing(2),\n  },\n  info: {\n    textTransform: \"capitalize\",\n    marginBottom: theme.spacing(4),\n    fontSize: 12,\n  },\n}));\n\nconst ForecastsListItem = ({\n  forecast,\n  index,\n  sliderChange,\n  metric,\n  selected,\n}) => {\n  const classes = useStyles();\n\n  const {\n    tempC,\n    tempCMax,\n    tempCMin,\n    tempF,\n    tempFMax,\n    tempFMin,\n    humidity,\n    date,\n    description,\n    icon,\n    wind,\n  } = forecast;\n\n  return (\n    <div className={classes.item}>\n      <Card\n        className={`${index === selected ? classes.active : classes.card}`}\n        onClick={() => sliderChange(index)}\n      >\n        <CardContent className={classes.content}>\n          <Grid container spacing={3}>\n            <Grid item xs={8} sm container>\n              <Grid item xs={12}>\n                <Typography className={classes.date}>{date}</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography\n                  className={classes.temp}\n                  variant=\"h5\"\n                  component=\"h2\"\n                >\n                  {metric === \"imperial\" ? `${tempF} °F` : `${tempC} °C`}\n                </Typography>\n              </Grid>\n\n              <Typography className={classes.info}>{description}</Typography>\n            </Grid>\n            <Grid item>\n              <Avatar\n                alt={description}\n                className={classes.weatherIcon}\n                src={`${OPEN_WEATHER_MAP_URL}/img/wn/${icon}@2x.png`}\n              />\n            </Grid>\n          </Grid>\n          <Grid item sm container>\n            <Grid item xs={4}>\n              <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n                <Avatar\n                  alt={description}\n                  className={classes.icon}\n                  src={ThermometerIcon}\n                />\n                <Typography className={classes.cardFooterText}>\n                  {metric === \"imperial\"\n                    ? `${tempFMax} / ${tempFMin}`\n                    : `${tempCMax} / ${tempCMin}`}\n                </Typography>\n              </Box>\n            </Grid>\n\n            <Grid item xs={4}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <Avatar\n                  alt={description}\n                  className={classes.icon}\n                  src={WindIcon}\n                />\n                <Typography className={classes.cardFooterText}>\n                  {wind} km/h\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={4}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <Avatar\n                  alt=\"Remy Sharp\"\n                  className={classes.icon}\n                  src={HumidityIcon}\n                />\n                <Typography className={classes.cardFooterText}>\n                  {humidity}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ForecastsListItem;\n","export const OPEN_WEATHER_MAP_URL = \"https://openweathermap.org/\";\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"../../components/Carousel\";\nimport ForecastsListItem from \"./ForecastsListItem\";\nimport {\n  groupedForecastList,\n  selectForecast,\n  resetForecast,\n  populateBarchartData,\n} from \"../../store/forecast\";\n\nconst Forecasts = ({ units }) => {\n  const [selected, setSelected] = useState(\"\");\n  const dispatch = useDispatch();\n  const forecasts = useSelector(groupedForecastList);\n  const keys = Object.keys(forecasts);\n\n  let content = <div />;\n\n  const showBarchart = (index) => {\n    setSelected(index);\n    dispatch(selectForecast(forecasts[keys[index]]));\n    dispatch(populateBarchartData());\n  };\n\n  const sliderChange = () => {\n    setSelected(null);\n    dispatch(resetForecast());\n  };\n\n  if (keys) {\n    content = keys.map((forecast, index) => (\n      <ForecastsListItem\n        forecast={forecasts[forecast][0]}\n        key={index}\n        selected={selected}\n        index={index}\n        metric={units}\n        sliderChange={showBarchart}\n      />\n    ));\n  }\n\n  return <Carousel sliderChange={sliderChange}>{content}</Carousel>;\n};\n\nexport default Forecasts;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles, Grid, Typography } from \"@material-ui/core\";\nimport Barchart from \"../../components/Barchart\";\nimport Switch from \"./Switch\";\nimport Forecasts from \"./Forecasts\";\nimport history from \"../../history\";\n\nconst useStyles = makeStyles((theme) => ({\n  root: {\n    maxWidth: theme.layout.maxWidth,\n    margin: theme.spacing(0, \"auto\"),\n    padding: theme.spacing(\"1rem\", 0),\n\n    [theme.breakpoints.up(\"md\")]: {\n      paddingLeft: theme.spacing(5),\n      paddingRight: theme.spacing(5),\n    },\n  },\n  header: {\n    padding: theme.spacing(1),\n  },\n  alignRight: {\n    [theme.breakpoints.up(\"sm\")]: {\n      textAlign: \"right\",\n    },\n  },\n}));\n\nconst WeatherScreen = () => {\n  const classes = useStyles();\n  const forecast = useSelector((state) => state.forecast);\n\n  if (forecast.list.length === 0) {\n    history.push(\"/\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <div className={classes.header}>\n        <Grid container>\n          <Grid item xs={12} sm={6}>\n            <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\">\n              {forecast.city.name}, {forecast.city.country}\n            </Typography>\n          </Grid>\n          <Grid\n            item\n            xs={12}\n            sm={6}\n            display=\"flex\"\n            className={classes.alignRight}\n          >\n            <Switch />\n          </Grid>\n        </Grid>\n      </div>\n\n      <Forecasts units={forecast.units} />\n      <Barchart data={forecast.barchart} />\n    </div>\n  );\n};\n\nexport default WeatherScreen;\n","import React from \"react\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport history from \"../../history\";\n\nexport default function NotFound() {\n  const error = useSelector((state) => state.forecast.error);\n\n  const gotToHome = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <Box\n      width={1 / 2}\n      display=\"flex\"\n      flexDirection=\"column\"\n      p={2}\n      mx=\"auto\"\n      textAlign=\"center\"\n    >\n      <Typography variant=\"h4\" component=\"h2\">\n        {error ? error : \"Page not found.\"}\n      </Typography>\n      <Box p={2}>\n        <Button variant=\"contained\" color=\"primary\" onClick={gotToHome} m={2}>\n          Home\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"../../history\";\nimport SplashScreen from \"../SplashScreen\";\nimport WeatherScreen from \"../WeatherScreen\";\nimport NotFoundPage from \"../NotFoundPage\";\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={SplashScreen} />\n        <Route path=\"/weatherapp\" component={WeatherScreen} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport forecastReducer from \"./forecast\";\n\nexport default combineReducers({\n  forecast: forecastReducer,\n});\n","import axios from \"axios\";\nimport moment from \"moment\";\nimport history from \"../../history\";\nimport * as actions from \"../api\";\n\nconst roundFloat = (number) => Number(number).toFixed();\n\nconst api = ({ dispatch }) => (next) => async (action) => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n\n  const { url, method, data, onStart, onSuccess, onError } = action.payload;\n\n  if (onStart) dispatch({ type: onStart });\n\n  next(action);\n\n  try {\n    const response = await axios.request({\n      baseURL: \"https://api.openweathermap.org\",\n      url,\n      method,\n      data,\n    });\n\n    const structuredData = await [\n      ...response.data.list.map((x) => {\n        return {\n          tempC: roundFloat(x.main.temp),\n          tempCMax: roundFloat(x.main.temp_max),\n          tempCMin: roundFloat(x.main.temp_min),\n          tempF: roundFloat(x.main.temp * 1.8 + 32),\n          tempFMax: roundFloat(x.main.temp_max * 1.8 + 32),\n          tempFMin: roundFloat(x.main.temp_min * 1.8 + 32),\n          humidity: x.main.humidity,\n          date: moment(x.dt_txt).format(\"DD MMM YY\"),\n          dt_txt: x.dt_txt,\n          dt: x.dt,\n          description: x.weather[0].description,\n          icon: x.weather[0].icon,\n          wind: roundFloat((x.wind.speed * (60 * 60)) / 1000),\n        };\n      }),\n    ];\n\n    if (onSuccess) {\n      dispatch({\n        type: onSuccess,\n        payload: { list: structuredData, city: response.data.city },\n      });\n      setTimeout(() => {\n        history.push(\"/weatherapp\");\n      }, 500);\n    }\n  } catch (error) {\n    if (onError) dispatch({ type: onError, payload: error.message });\n  }\n};\n\nexport default api;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport { createMuiTheme, ThemeProvider } from \"@material-ui/core/styles\";\nimport \"./index.css\";\nimport App from \"./containers/App\";\nimport configureStore from \"./store/configureStore.js\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport { lightBlue } from \"@material-ui/core/colors\";\n\nconst store = configureStore();\n\nconst theme = createMuiTheme({\n  palette: {\n    primary: {\n      light: lightBlue[600],\n      main: lightBlue[900],\n      dark: lightBlue[800],\n      contrastText: \"#fff\",\n    },\n  },\n  typography: {\n    fontSize: 12,\n  },\n  zIndex: {\n    arrow: 9,\n  },\n  layout: {\n    maxWidth: 992,\n  },\n});\n\nReactDOM.render(\n  <Provider store={store}>\n    <ThemeProvider theme={theme}>\n      <App />\n    </ThemeProvider>\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport api from \"./middleware/api\";\n\nexport default function () {\n  return configureStore({\n    reducer,\n    middleware: [...getDefaultMiddleware(), api],\n  });\n}\n"],"sourceRoot":""}