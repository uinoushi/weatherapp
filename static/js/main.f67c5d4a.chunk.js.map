{"version":3,"sources":["components/wind.svg","components/humidity.svg","components/thermometer.svg","history.js","store/api.js","store/forecast.js","containers/SplashScreen.jsx","components/Barchart.jsx","components/Switch.jsx","components/Carousel.jsx","components/ForcastsListItem.jsx","components/Forecasts.jsx","containers/WeatherScreen.jsx","containers/NotFoundPage/index.js","App.js","store/reducer.js","store/middleware/api.js","serviceWorker.js","index.js","store/configureStore.js"],"names":["module","exports","createBrowserHistory","apiCallBegan","createAction","slice","createSlice","name","initialState","list","location","barchart","selected","units","loading","error","reducers","forcastRequested","forcasts","forcastReceived","action","payload","forecast","forcastRequestFailed","updateUnits","generateDayForcast","datas","removeForcastsPerDay","selectDayForcast","setError","actions","getGroupedForcasts","createSelector","state","forecasts","reduce","accumulator","currentValue","date","moment","dt_txt","format","generateForcastsPerDay","dispatch","getState","m","map","daily","tempC","tempF","temp","useStyles","makeStyles","theme","createStyles","root","display","height","alignItems","justifyContent","marginLeft","spacing","SplashScreen","classes","useDispatch","useEffect","Promise","resolve","reject","navigator","geolocation","getCurrentPosition","then","position","coords","latitude","longitude","url","process","onStart","type","onSuccess","onError","loadForcasts","catch","err","history","push","className","CircularProgress","color","Barchart","data","useSelector","style","width","maxWidth","margin","fontSize","interval","dataKey","barSize","fill","yAxisId","entry","index","key","CustomRadio","withStyles","lightBlue","checked","props","Radio","Switch","useState","value","setValue","FormControl","component","RadioGroup","row","aria-label","onChange","event","target","FormControlLabel","control","label","slickHide","visibility","nav","top","zIndex","padding","transform","next","left","prev","right","SampleNextArrow","onClick","nextClassName","includes","IconButton","SamplePrevArrow","prevClassName","Carousel","sliderChange","this","settings","dots","infinite","speed","slidesToShow","slidesToScroll","beforeChange","nextArrow","prevArrow","responsive","breakpoint","initialSlide","children","Component","pad","boxSizing","backgroundColor","title","marginTop","marginBottom","info","textTransform","micon","icon","marginRight","content","paddingBottom","footer","card","ForcastsListItem","metric","tempCMax","tempCMin","tempFMax","tempFMin","humidity","description","wind","Card","CardContent","Grid","container","item","xs","sm","Typography","variant","Avatar","alt","src","Box","flexDirection","ThermometerIcon","WindIcon","HumidityIcon","Forecasts","setSelected","keys","Object","showBarchart","alignRight","WeatherScreen","length","p","country","NotFound","mx","textAlign","Button","App","exact","path","NotFoundPage","combineReducers","forecastReducer","api","a","method","axios","request","baseURL","response","x","Number","main","toFixed","temp_max","temp_min","dt","weather","structuredData","city","setTimeout","message","Boolean","window","hostname","match","store","configureStore","reducer","middleware","getDefaultMiddleware","ReactDOM","render","document","getElementById","serviceWorker","ready","registration","unregister","console"],"mappings":"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","file":"static/js/main.f67c5d4a.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/wind.f435e6d9.svg\";","module.exports = __webpack_public_path__ + \"static/media/humidity.f7efb53c.svg\";","module.exports = __webpack_public_path__ + \"static/media/thermometer.10a1d9ca.svg\";","import { createBrowserHistory } from \"history\";\nexport default createBrowserHistory();\n","import { createAction } from \"@reduxjs/toolkit\";\n\nexport const apiCallBegan = createAction(\"api/callBegan\");\nexport const apiCallSuccess = createAction(\"api/callSuccess\");\nexport const apiCallFailed = createAction(\"api/callFailed\");\n","import { createSlice } from \"@reduxjs/toolkit\";\nimport { createSelector } from \"reselect\";\nimport { apiCallBegan } from \"./api\";\nimport moment from \"moment\";\n\nconst slice = createSlice({\n  name: \"forecast\",\n  initialState: {\n    list: [],\n    location: {},\n    barchart: [],\n    selected: [],\n    units: \"imperial\",\n    loading: false,\n    error: null,\n  },\n  reducers: {\n    forcastRequested: (forcasts) => {\n      forcasts.loading = true;\n    },\n\n    forcastReceived: (forcasts, action) => {\n      forcasts.list = action.payload.forecast;\n      forcasts.location = action.payload.location;\n      forcasts.barchart = [];\n      forcasts.loading = false;\n    },\n\n    forcastRequestFailed: (forcasts) => {\n      forcasts.loading = false;\n    },\n\n    updateUnits: (forcasts, action) => {\n      forcasts.units = action.payload;\n    },\n\n    generateDayForcast: (forcasts, action) => {\n      forcasts.barchart = action.payload.datas;\n    },\n\n    removeForcastsPerDay: (forcasts) => {\n      forcasts.barchart = [];\n      forcasts.selected = [];\n    },\n\n    selectDayForcast: (forcasts, action) => {\n      forcasts.selected = action.payload;\n    },\n\n    setError: (forcasts, action) => {\n      forcasts.error = action.payload;\n    },\n  },\n});\n\nexport const {\n  forcastReceived,\n  forcastRequested,\n  forcastRequestFailed,\n  generateDayForcast,\n  removeForcastsPerDay,\n  updateUnits,\n  selectDayForcast,\n  setError,\n} = slice.actions;\n\nexport default slice.reducer;\n\n// Action Creators\nexport const loadForcasts = (position) => (dispatch, getState) => {\n  const { latitude, longitude } = position.coords;\n  const url = `/data/2.5/forecast?lat=${latitude}&lon=${longitude}&APPID=${process.env.REACT_APP_WEATHER_API_KEY}&cnt=40&units=metric`;\n\n  return dispatch(\n    apiCallBegan({\n      url,\n      onStart: forcastRequested.type,\n      onSuccess: forcastReceived.type,\n      onError: forcastRequestFailed.type,\n    })\n  );\n};\n\nexport const getGroupedForcasts = createSelector(\n  (state) => state.forecasts,\n  (forecasts) =>\n    forecasts.list.reduce((accumulator, currentValue) => {\n      const date = moment(currentValue.dt_txt).format(\"DD\");\n\n      accumulator[date] = [...(accumulator[date] || []), currentValue];\n      return accumulator;\n    }, {})\n);\n\nexport const generateForcastsPerDay = () => (dispatch, getState) => {\n  const { units, selected } = getState().forecasts;\n  const m = units === \"metric\" ? \"C\" : \"F\";\n\n  if (!selected) {\n    return;\n  }\n\n  const datas = [\n    ...selected.map((daily) => {\n      return {\n        name: m === \"C\" ? `${daily.tempC} ${m}` : `${daily.tempF} ${m}`,\n        temp: m === \"C\" ? daily.tempC : daily.tempF,\n      };\n    }),\n  ];\n\n  return dispatch(\n    generateDayForcast({\n      datas,\n    })\n  );\n};\n","import React, { useEffect } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { makeStyles, createStyles } from \"@material-ui/core/styles\";\nimport CircularProgress from \"@material-ui/core/CircularProgress\";\nimport { loadForcasts, setError } from \"../store/forecast\";\nimport history from \"../history\";\n\nconst useStyles = makeStyles((theme) =>\n  createStyles({\n    root: {\n      display: \"flex\",\n      height: \"100vh\",\n      alignItems: \"center\",\n      justifyContent: \"center\",\n      \"& > * + *\": {\n        marginLeft: theme.spacing(2),\n      },\n    },\n  })\n);\n\nconst SplashScreen = () => {\n  const classes = useStyles();\n  const dispatch = useDispatch();\n\n  const getPosition = () => {\n    return new Promise(function (resolve, reject) {\n      navigator.geolocation.getCurrentPosition(resolve, reject);\n    });\n  };\n\n  useEffect(() => {\n    getPosition()\n      .then((position) => {\n        dispatch(loadForcasts(position));\n      })\n      .catch((err) => {\n        dispatch(setError(\"Please enable location and try again.\"));\n        history.push(\"/locationNotFound\");\n      });\n    // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n\n  return (\n    <div className={classes.root}>\n      <CircularProgress color=\"secondary\" />\n    </div>\n  );\n};\n\nexport default SplashScreen;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { XAxis, ResponsiveContainer, Bar, BarChart, Cell } from \"recharts\";\n\nconst Barchart = () => {\n  const data = useSelector((state) => state.forecasts.barchart);\n\n  return (\n    <div\n      className=\"line-chart-wrapper\"\n      style={{\n        width: \"100%\",\n        maxWidth: 990,\n        height: \"400px\",\n        margin: \"12px auto\",\n      }}\n    >\n      <ResponsiveContainer>\n        <BarChart width={400} height={400} data={data}>\n          <XAxis fontSize={10} interval={0} dataKey=\"name\" />\n          <Bar barSize={80} fill=\"#81d4fa\" yAxisId=\"a\" dataKey=\"temp\">\n            {data.map((entry, index) => (\n              <Cell key={`cell-${index}`} />\n            ))}\n          </Bar>\n        </BarChart>\n      </ResponsiveContainer>\n    </div>\n  );\n};\n\nexport default Barchart;\n","import React, { useState } from \"react\";\nimport { useDispatch } from \"react-redux\";\nimport { withStyles } from \"@material-ui/core/styles\";\nimport Radio from \"@material-ui/core/Radio\";\nimport RadioGroup from \"@material-ui/core/RadioGroup\";\nimport FormControlLabel from \"@material-ui/core/FormControlLabel\";\nimport FormControl from \"@material-ui/core/FormControl\";\nimport { updateUnits } from \"../store/forecast\";\nimport { lightBlue } from \"@material-ui/core/colors\";\nimport { generateForcastsPerDay } from \"../store/forecast\";\n\nconst CustomRadio = withStyles({\n  root: {\n    color: lightBlue[900],\n    \"&$checked\": {\n      color: lightBlue[900],\n    },\n  },\n  checked: {},\n})((props) => <Radio color=\"default\" {...props} />);\n\nconst Switch = () => {\n  const dispatch = useDispatch();\n  const [value, setValue] = useState(\"imperial\");\n\n  const handleRadioChange = (event) => {\n    setValue(event.target.value);\n    dispatch(updateUnits(event.target.value));\n    dispatch(generateForcastsPerDay());\n  };\n\n  return (\n    <FormControl component=\"fieldset\">\n      <RadioGroup\n        row\n        aria-label=\"forcast\"\n        name=\"forcast\"\n        value={value}\n        onChange={handleRadioChange}\n      >\n        <FormControlLabel\n          value=\"metric\"\n          control={<CustomRadio />}\n          label=\"Celcius\"\n        />\n        <FormControlLabel\n          value=\"imperial\"\n          control={<CustomRadio />}\n          label=\"Fahrenheit\"\n        />\n      </RadioGroup>\n    </FormControl>\n  );\n};\n\nexport default Switch;\n","import React, { Component } from \"react\";\nimport Slider from \"react-slick\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport NavigateNext from \"@material-ui/icons/NavigateNext\";\nimport NavigateBefore from \"@material-ui/icons/NavigateBefore\";\nimport { makeStyles } from \"@material-ui/core/styles\";\n\nconst useStyles = makeStyles({\n  slickHide: {\n    visibility: \"hidden\",\n  },\n  nav: {\n    position: \"absolute\",\n    top: \"50%\",\n    zIndex: 9,\n    padding: 0,\n    transform: \"translateY(-17px)\",\n  },\n  next: {\n    left: \"100%\",\n  },\n  prev: {\n    right: \"100%\",\n  },\n});\n\nfunction SampleNextArrow(props) {\n  const { className, onClick } = props;\n  const classes = useStyles();\n  const nextClassName = className.includes(\"slick-disabled\")\n    ? `${classes.slickHide} ${classes.nav}  ${classes.next}`\n    : `${classes.next} ${classes.nav}`;\n\n  return (\n    <IconButton className={nextClassName} aria-label=\"next\" onClick={onClick}>\n      <NavigateNext fontSize=\"large\" />\n    </IconButton>\n  );\n}\n\nfunction SamplePrevArrow(props) {\n  const { className, onClick } = props;\n  const classes = useStyles();\n  const prevClassName = className.includes(\"slick-disabled\")\n    ? `${classes.slickHide} ${classes.nav}  ${classes.prev}`\n    : `${classes.prev} ${classes.nav}`;\n\n  return (\n    <IconButton className={prevClassName} aria-label=\"prev\" onClick={onClick}>\n      <NavigateBefore fontSize=\"large\" />\n    </IconButton>\n  );\n}\n\nclass Carousel extends Component {\n  render() {\n    const { sliderChange } = this.props;\n\n    var settings = {\n      dots: false,\n      infinite: false,\n      speed: 500,\n      slidesToShow: 3,\n      slidesToScroll: 1,\n      beforeChange: (index) => sliderChange(index),\n      nextArrow: <SampleNextArrow />,\n      prevArrow: <SamplePrevArrow />,\n      responsive: [\n        {\n          breakpoint: 900,\n          settings: {\n            slidesToShow: 2,\n            slidesToScroll: 1,\n            initialSlide: 0,\n            dots: true,\n          },\n        },\n        {\n          breakpoint: 767,\n          settings: {\n            slidesToShow: 1,\n            slidesToScroll: 1,\n            initialSlide: 0,\n            dots: true,\n          },\n        },\n      ],\n    };\n\n    return <Slider {...settings}>{this.props.children}</Slider>;\n  }\n}\n\nexport default Carousel;\n","import React from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Card from \"@material-ui/core/Card\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Avatar from \"@material-ui/core/Avatar\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Box from \"@material-ui/core/Box\";\nimport WindIcon from \"./wind.svg\";\nimport HumidityIcon from \"./humidity.svg\";\nimport ThermometerIcon from \"./thermometer.svg\";\n\nconst useStyles = makeStyles({\n  pad: {\n    padding: \"10px\",\n    boxSizing: \"border-box\",\n  },\n  selected: {\n    color: \"#01579b\",\n    backgroundColor: \"#81d4fa\",\n  },\n  title: {\n    fontSize: 14,\n  },\n  temp: {\n    marginTop: 4,\n    marginBottom: 12,\n  },\n  info: {\n    textTransform: \"capitalize\",\n    marginBottom: 30,\n    fontSize: 13,\n  },\n  micon: {\n    width: 64,\n    height: 64,\n  },\n  icon: {\n    width: 24,\n    height: 24,\n    marginRight: 6,\n  },\n  content: {\n    \"&:last-child\": {\n      paddingBottom: 16,\n    },\n  },\n  footer: {\n    fontSize: 12,\n  },\n  card: {\n    backgroundColor: \"#b3e5fc\",\n  },\n});\n\nconst ForcastsListItem = ({\n  forecast,\n  index,\n  sliderChange,\n  metric,\n  selected,\n}) => {\n  const classes = useStyles();\n\n  const {\n    tempC,\n    tempCMax,\n    tempCMin,\n    tempF,\n    tempFMax,\n    tempFMin,\n    humidity,\n    date,\n    description,\n    icon,\n    wind,\n  } = forecast;\n\n  return (\n    <div className={classes.pad}>\n      <Card\n        className={`${index === selected ? classes.selected : classes.card}`}\n        onClick={() => sliderChange(index)}\n      >\n        <CardContent className={classes.content}>\n          <Grid container spacing={3}>\n            <Grid item xs={8} sm container>\n              <Grid item xs={12}>\n                <Typography color=\"textSecondary\">{date}</Typography>\n              </Grid>\n              <Grid item xs={12}>\n                <Typography\n                  className={classes.temp}\n                  variant=\"h5\"\n                  component=\"h2\"\n                >\n                  {metric === \"imperial\" ? `${tempF} °F` : `${tempC} °C`}\n                </Typography>\n              </Grid>\n\n              <Typography className={classes.info} color=\"textSecondary\">\n                {description}\n              </Typography>\n            </Grid>\n            <Grid item>\n              <Avatar\n                alt=\"Remy Sharp\"\n                className={classes.micon}\n                src={`http://openweathermap.org/img/wn/${icon}@2x.png`}\n              />\n            </Grid>\n          </Grid>\n          <Grid item sm container>\n            <Grid item xs={4}>\n              <Box display=\"flex\" flexDirection=\"row\" alignItems=\"center\">\n                <Avatar\n                  alt=\"Remy Sharp\"\n                  className={classes.icon}\n                  src={ThermometerIcon}\n                />\n                <Typography color=\"textSecondary\" className={classes.footer}>\n                  {metric === \"imperial\"\n                    ? `${tempFMax} / ${tempFMin}`\n                    : `${tempCMax} / ${tempCMin}`}\n                </Typography>\n              </Box>\n            </Grid>\n\n            <Grid item xs={4} className={classes.footer}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <Avatar\n                  alt=\"Remy Sharp\"\n                  className={classes.icon}\n                  src={WindIcon}\n                />\n                <Typography color=\"textSecondary\" className={classes.footer}>\n                  {wind} km/h\n                </Typography>\n              </Box>\n            </Grid>\n            <Grid item xs={4} className={classes.footer}>\n              <Box\n                display=\"flex\"\n                flexDirection=\"row\"\n                alignItems=\"center\"\n                justifyContent=\"center\"\n              >\n                <Avatar\n                  alt=\"Remy Sharp\"\n                  className={classes.icon}\n                  src={HumidityIcon}\n                />\n                <Typography color=\"textSecondary\" className={classes.footer}>\n                  {humidity}\n                </Typography>\n              </Box>\n            </Grid>\n          </Grid>\n        </CardContent>\n      </Card>\n    </div>\n  );\n};\n\nexport default ForcastsListItem;\n","import React, { useState } from \"react\";\nimport { useSelector, useDispatch } from \"react-redux\";\nimport Carousel from \"./Carousel\";\nimport ForcastsListItem from \"./ForcastsListItem\";\nimport {\n  getGroupedForcasts,\n  selectDayForcast,\n  removeForcastsPerDay,\n  generateForcastsPerDay,\n} from \"../store/forecast\";\n\nconst Forecasts = () => {\n  const [selected, setSelected] = useState(\"\");\n  const dispatch = useDispatch();\n  const forecasts = useSelector(getGroupedForcasts);\n  const units = useSelector((state) => state.forecasts.units);\n  const keys = Object.keys(forecasts);\n\n  let content = <div />;\n\n  const showBarchart = (index) => {\n    setSelected(index);\n    dispatch(selectDayForcast(forecasts[keys[index]]));\n    dispatch(generateForcastsPerDay());\n  };\n\n  const sliderChange = () => {\n    setSelected(null);\n    dispatch(removeForcastsPerDay());\n  };\n\n  if (keys) {\n    content = keys.map((forecast, index) => (\n      <ForcastsListItem\n        forecast={forecasts[forecast][0]}\n        key={index}\n        selected={selected}\n        index={index}\n        metric={units}\n        sliderChange={showBarchart}\n      />\n    ));\n  }\n\n  return <Carousel sliderChange={sliderChange}>{content}</Carousel>;\n};\n\nexport default Forecasts;\n","import React from \"react\";\nimport { useSelector } from \"react-redux\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport Box from \"@material-ui/core/Box\";\nimport Typography from \"@material-ui/core/Typography\";\nimport Barchart from \"../components/Barchart\";\nimport Switch from \"../components/Switch\";\nimport Forecasts from \"../components/Forecasts\";\nimport history from \"../history\";\n\nconst useStyles = makeStyles({\n  root: {\n    maxWidth: 992,\n    margin: \"0 auto\",\n    padding: \"1rem 45px\",\n  },\n  alignRight: {\n    marginLeft: \"auto\",\n  },\n});\n\nconst WeatherScreen = () => {\n  const classes = useStyles();\n  const forecasts = useSelector((state) => state.forecasts);\n\n  if (forecasts.list.length === 0) {\n    history.push(\"/\");\n  }\n\n  return (\n    <div className={classes.root}>\n      <Box display=\"flex\" p={1}>\n        <Box display=\"flex\" alignItems=\"center\">\n          <Typography variant=\"h5\" component=\"h2\" color=\"textSecondary\">\n            {forecasts.location.name}, {forecasts.location.country}\n          </Typography>\n        </Box>\n        <Box display=\"flex\" className={classes.alignRight}>\n          <Switch />\n        </Box>\n      </Box>\n\n      <Forecasts />\n      <Barchart />\n    </div>\n  );\n};\n\nexport default WeatherScreen;\n","import React from \"react\";\nimport { Box, Typography, Button } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport history from \"../../history\";\n\nexport default function NotFound() {\n  const error = useSelector((state) => state.forecasts.error);\n\n  const gotToHome = () => {\n    history.push(\"/\");\n  };\n\n  return (\n    <Box\n      width={1 / 2}\n      display=\"flex\"\n      flexDirection=\"column\"\n      p={2}\n      mx=\"auto\"\n      textAlign=\"center\"\n    >\n      <Typography variant=\"h4\" component=\"h2\">\n        {error ? error : \"Page not found.\"}\n      </Typography>\n      <Box p={2}>\n        <Button variant=\"contained\" color=\"primary\" onClick={gotToHome} m={2}>\n          Home\n        </Button>\n      </Box>\n    </Box>\n  );\n}\n","import React from \"react\";\nimport { Router, Route, Switch } from \"react-router-dom\";\nimport history from \"./history\";\nimport SplashScreen from \"./containers/SplashScreen\";\nimport WeatherScreen from \"./containers/WeatherScreen\";\nimport NotFoundPage from \"./containers/NotFoundPage\";\n\nfunction App() {\n  return (\n    <Router history={history}>\n      <Switch>\n        <Route exact path=\"/\" component={SplashScreen} />\n        <Route path=\"/weatherapp\" component={WeatherScreen} />\n        <Route path=\"*\" component={NotFoundPage} />\n      </Switch>\n    </Router>\n  );\n}\n\nexport default App;\n","import { combineReducers } from \"redux\";\nimport forecastReducer from \"./forecast\";\n\nexport default combineReducers({\n  forecasts: forecastReducer,\n});\n","import axios from \"axios\";\nimport * as moment from \"moment\";\nimport history from \"../../history\";\nimport * as actions from \"../api\";\n\nconst api = ({ dispatch }) => (next) => async (action) => {\n  if (action.type !== actions.apiCallBegan.type) return next(action);\n\n  const { url, method, data, onStart, onSuccess, onError } = action.payload;\n\n  if (onStart) dispatch({ type: onStart });\n\n  next(action);\n\n  try {\n    const response = await axios.request({\n      baseURL: \"https://api.openweathermap.org\",\n      url,\n      method,\n      data,\n    });\n\n    const structuredData = await [\n      ...response.data.list.map((x) => {\n        return {\n          tempC: Number(x.main.temp).toFixed(),\n          tempCMax: Number(x.main.temp_max).toFixed(),\n          tempCMin: Number(x.main.temp_min).toFixed(),\n          tempF: Number(x.main.temp * 1.8 + 32).toFixed(),\n          tempFMax: Number(x.main.temp_max * 1.8 + 32).toFixed(),\n          tempFMin: Number(x.main.temp_min * 1.8 + 32).toFixed(),\n          humidity: x.main.humidity,\n          date: moment(x.dt_txt).format(\"DD MMM YY\"),\n          dt_txt: x.dt_txt,\n          dt: x.dt,\n          description: x.weather[0].description,\n          icon: x.weather[0].icon,\n          wind: Number((x.wind.speed * (60 * 60)) / 1000).toFixed(),\n        };\n      }),\n    ];\n\n    if (onSuccess) {\n      dispatch({\n        type: onSuccess,\n        payload: { forecast: structuredData, location: response.data.city },\n      });\n      setTimeout(() => {\n        history.push(\"/weatherapp\");\n      }, 500);\n    }\n  } catch (error) {\n    if (onError) dispatch({ type: onError, payload: error.message });\n  }\n};\n\nexport default api;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider } from \"react-redux\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport configureStore from \"./store/configureStore.js\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nconst store = configureStore();\n\nReactDOM.render(\n  <Provider store={store}>\n    <App />\n  </Provider>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n","import { configureStore, getDefaultMiddleware } from \"@reduxjs/toolkit\";\nimport reducer from \"./reducer\";\nimport api from \"./middleware/api\";\n\nexport default function () {\n  return configureStore({\n    reducer,\n    middleware: [...getDefaultMiddleware(), api],\n  });\n}\n"],"sourceRoot":""}